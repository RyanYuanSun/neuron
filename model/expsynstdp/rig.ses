{load_file("nrngui.hoc")}
objectvar save_window_, rvp_
objectvar scene_vector_[6]
objectvar ocbox_, ocbox_list_, scene_, scene_list_
{ocbox_list_ = new List()  scene_list_ = new List()}
{pwman_place(0,0,0)}
{
xpanel("RunControl", 0)
v_init = -65
xvalue("Init","v_init", 1,"stdinit()", 1, 1 )
xbutton("Init & Run","run()")
xbutton("Stop","stoprun=1")
runStopAt = 5
xvalue("Continue til","runStopAt", 1,"{continuerun(runStopAt) stoprun=1}", 1, 1 )
runStopIn = 1
xvalue("Continue for","runStopIn", 1,"{continuerun(t + runStopIn) stoprun=1}", 1, 1 )
xbutton("Single Step","steprun()")
t = 0
xvalue("t","t", 2 )
tstop = 100
xvalue("Tstop","tstop", 1,"tstop_changed()", 0, 1 )
dt = 0.21585
xvalue("dt","dt", 1,"setdt()", 0, 1 )
steps_per_ms = 40
xvalue("Points plotted/ms","steps_per_ms", 1,"setdt()", 0, 1 )
screen_update_invl = 0.05
xvalue("Scrn update invl","screen_update_invl", 1,"", 0, 1 )
realtime = 0
xvalue("Real Time","realtime", 0,"", 0, 1 )
xpanel(0,105)
}
{
save_window_ = new Graph(0)
save_window_.size(0,100,-80,40)
scene_vector_[2] = save_window_
{save_window_.view(0, -80, 100, 120, 265, 105, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("v(.5)", 1, 1, 0.8, 0.9, 2)
}
{
save_window_ = new Graph(0)
save_window_.size(0,100,0,1)
scene_vector_[3] = save_window_
{save_window_.view(0, 0, 100, 1, 265, 369, 300.48, 200.32)}
graphList[0].append(save_window_)
save_window_.save_name("graphList[0].")
save_window_.addexpr("syn.g", 1, 1, 0.8, 0.9, 2)
}

//Begin Grapher
{
load_file("grapher.hoc")}
{
ocbox_=new Grapher(1)

ocbox_.info("t","t", "", -100, 100, -2.98023e-08, 1.5, 500, -40, 40)
{
save_window_=ocbox_.g
save_window_.size(-100,100,-1.49012e-08,1.5)
scene_vector_[4] = save_window_
ocbox_.g = save_window_
save_window_.save_name("ocbox_.g")
save_window_.xexpr("t", 0)
save_window_.addexpr("ExpSynSTDP[0].factor(t)", 1, 1, 0.550799, 0.91436, 2)
}
ocbox_ = ocbox_.vbox
ocbox_.map("Grapher", 592, 6, 308.16, 437.76)
}
objref ocbox_
//End Grapher


//Begin VariableTimeStep
{
ocbox_ = NumericalMethodPanel[0]
}
{object_push(ocbox_)}
{
atol_ = 0.001  CVode[0].atol(atol_)
restore(301, 1)
 atoltool_ = new AtolTool()
    ats("v", 10)
    ats("Vector", -1)
 atoltool_.scales()
}
{object_pop()}
{
ocbox_.map("VariableTimeStep", 0, 481, 246.72, 105.6)
}
objref ocbox_
//End VariableTimeStep

objectvar scene_vector_[1]
{doNotify()}
